import org.code.neighborhood.*;
public class HeartPainter extends PainterPlus {
// the Heart itself
  /*
  * all the coordinates of where paints needs to go for the heart, such as how long the lines need to be
  */
public void paintHeart(String color){
  move();
  move();
  move();
  move();
  move();
  turnRight();
    move();
  move();
  move();
  move();
turnLeft();
  paintLine(color,5);
 move();
  move();
  move();
  move();
  move();
   move();
  move();
  move();
   move();
  move();
  move();
   paintLine(color,5);

  move();
   turnRight();
   move();
  turnRight();
    paintLine(color,7);
  move();
  move();
  move();
  move();
  move();
   move();
  move();
  move();
   move();
    paintLine(color,7);
   move();
  turnLeft();
   move();
    turnLeft();
    paintLine(color,9);
   move();
  move();
  move();
  move();
  move();
   move();
    move();
   paintLine(color,9);
   move();
  turnRight();
   move();
    turnRight();
  paintLine(color,11);
    move();
  move();
  move();
  move();
   move();
  paintLine(color,11);
  turnLeft();
     move();
   turnLeft();
   paintLine(color,12);
   move();
  move();
    move();
   paintLine(color,12);
   turnRight();
   move();
    turnRight();
   paintLine(color,13);
   move();
   paintLine(color,13);
    turnLeft();
     move();
   turnLeft();
     paintLine(color,27);
   turnRight();
   move();
    turnRight();
  paintLine(color,27);
   turnLeft();
     move();
   turnLeft();
   paintLine(color,27);
     turnRight();
   move();
    turnRight();
  paintLine(color,27);
   turnLeft();
     move();
   turnLeft();
   paintLine(color,27);
     turnRight();
   move();
    turnRight();
  paintLine(color,27);
   turnLeft();
     move();
   turnLeft();
   paintLine(color,27);
     turnRight();
   move();
    turnRight();
  move();
    paintLine(color,25);
turnLeft();
     move();
   turnLeft();
  move();
paintLine(color,23);
  turnRight();
   move();
    turnRight();
  move();
  paintLine(color,21);
  turnLeft();
     move();
   turnLeft();
  move();
   paintLine(color,19);
    turnRight();
   move();
    turnRight();
  move();
  paintLine(color,17);
   turnLeft();
     move();
   turnLeft();
  move();
  paintLine(color,15);
   turnRight();
   move();
    turnRight();
  move();
  paintLine(color,13);
   turnLeft();
     move();
   turnLeft();
  move();
    paintLine(color,11);
    turnRight();
   move();
    turnRight();
  move();
  paintLine(color,9);
   turnLeft();
     move();
   turnLeft();
  move();
  paintLine(color,7);
   turnRight();
   move();
    turnRight();
  move();
   paintLine(color,5);
   turnLeft();
     move();
   turnLeft();
  move();
  paintLine(color,3);
   turnRight();
   move();
    turnRight();
  move();
    paintLine(color,1);
 turnLeft();
     move();
   turnLeft();
  move();
  
  
}


}


